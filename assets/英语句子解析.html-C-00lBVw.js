import{_ as t,c as s,a as i,o as l}from"./app-DnQnq6aU.js";const n={};function a(o,e){return l(),s("div",null,e[0]||(e[0]=[i(`<ul><li><p><strong>React Router embraces this convention with APIs for creating nested layouts coupled to URL segments and data.</strong></p><p>句子的语法结构：</p><ol><li>主语：React Router</li><li>谓语动词：embraces (拥抱，采用)</li><li>宾语：this convention (这个惯例)</li><li>介词短语（作为方式补语）：with APIs</li><li>APIs的修饰语： <ul><li>for creating nested layouts</li><li>coupled to URL segments and data</li></ul></li></ol><p>进一步分解：</p><ul><li>&quot;creating nested layouts&quot; 是现在分词短语，作为APIs的目的说明</li><li>&quot;coupled to URL segments and data&quot; 是过去分词短语，作为layouts的状态描述</li><li>&quot;URL segments and data&quot; 是并列结构，通过 &quot;and&quot; 连接</li></ul><p>如果用树状结构表示，这个句子可以这样分解：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CopyReact Router embraces this convention</span>
<span class="line">                └── with APIs</span>
<span class="line">                    ├── for creating nested layouts</span>
<span class="line">                    └── coupled to</span>
<span class="line">                        ├── URL segments</span>
<span class="line">                        └── data</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Most web apps have persistent navigation sections at the top of the UI, the sidebar, and often multiple levels.</strong></p><p>句子的语法结构：</p><ol><li>主语：Most web apps (大多数网络应用)</li><li>谓语动词：have (拥有)</li><li>宾语：persistent navigation sections (持久的导航部分)，后面有三个位置介词短语修饰： <ul><li>at the top of the UI</li><li>[at] the sidebar</li><li>[and] often [at] multiple levels</li></ul></li></ol><p>这里使用了并列结构和省略：</p><ul><li>&quot;at&quot; 在 &quot;the sidebar&quot; 前被省略</li><li>&quot;at&quot; 在 &quot;multiple levels&quot; 前也被省略</li><li>使用 &quot;and&quot; 连接最后一个元素</li></ul><p>如果用树状结构表示：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CopyMost web apps have persistent navigation sections</span>
<span class="line">                └── at the top of the UI</span>
<span class="line">                └── [at] the sidebar</span>
<span class="line">                └── and often [at] multiple levels</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>It gives you the UX capabilities of client rendered apps with the simplicity of the &quot;old school&quot; web model.</strong></p></li></ul>`,1)]))}const d=t(n,[["render",a],["__file","英语句子解析.html.vue"]]),p=JSON.parse('{"path":"/English/English-grammar/%E8%8B%B1%E8%AF%AD%E5%8F%A5%E5%AD%90%E8%A7%A3%E6%9E%90.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1728614129000,"contributors":[{"name":"RuanCong","username":"RuanCong","email":"1308811723@qq.com","commits":2,"url":"https://github.com/RuanCong"}]},"filePathRelative":"English/English-grammar/英语句子解析.md"}');export{d as comp,p as data};
