import{_ as n,c as a,a as s,o as i}from"./app-CodbwuQc.js";const l={};function c(d,e){return i(),a("div",null,e[0]||(e[0]=[s(`<h2 id="默认配置文件" tabindex="-1"><a class="header-anchor" href="#默认配置文件"><span>默认配置文件</span></a></h2><p>在<code>~/.gemini</code>目录下。运行<code>gemini</code>时用的<code>-- options</code>，都可以在<code>setttings.json</code>里面对应地设置</p><h2 id="新增gemini-md文件" tabindex="-1"><a class="header-anchor" href="#新增gemini-md文件"><span>新增<code>GEMINI.md</code>文件</span></a></h2><p>可以在项目的根目录或者<code>~/.gemini/GEMINI.md</code> 增加总体性的文档</p><h2 id="运行local-shell-command" tabindex="-1"><a class="header-anchor" href="#运行local-shell-command"><span>运行local shell command</span></a></h2><p>输入<code>!</code> 符号就可以运行本地命令了。<code>esc</code>键退出</p><h2 id="调用save-memory工具" tabindex="-1"><a class="header-anchor" href="#调用save-memory工具"><span>调用Save Memory工具</span></a></h2><p>例如输入：<code>remember tnat Itike to use ConventionaT Commit syntax</code> 它就会把这个信息保存到GEMINI.md文件内。</p><h2 id="指定文件" tabindex="-1"><a class="header-anchor" href="#指定文件"><span>指定文件</span></a></h2><p>用<code>@</code>指定文件或文件夹</p><h2 id="使用-sandbox" tabindex="-1"><a class="header-anchor" href="#使用-sandbox"><span>使用<code>--sandbox</code></span></a></h2><p>默认模式下，<code>gemini</code>只会对当前项目下的文件有读写权限。</p><p>通过启用沙盒模式，这样会理安全</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">gemini <span class="token parameter variable">--sandbox</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>还可以在<code>~/.gemini/settings.json</code>配置文件里配置默认开启sandbox</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">...</span>
<span class="line"><span class="token property">&quot;sandbox&quot;</span><span class="token operator">:</span><span class="token boolean">true</span></span>
<span class="line">...</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以在这个配置文件里配置沙盒模式使用<code>docker</code>，在使用<code>docker</code>的模式下，可能会导致连接的<code>mcp</code>用不了，因为默认的<code>docker </code>镜像内没有相应的环境（如node环境）</p><h2 id="使用checkpointing" tabindex="-1"><a class="header-anchor" href="#使用checkpointing"><span>使用checkpointing</span></a></h2><p>gemini可能会对文件进行修改，checkpointing 是为了方便回到gemini操作文件之前的状态</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">gemini <span class="token parameter variable">--checkpointing</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>用restore进行恢复 <code>/restore [checkpoint_file]</code></p><h2 id="对chat的保存与恢复" tabindex="-1"><a class="header-anchor" href="#对chat的保存与恢复"><span>对chat的保存与恢复</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">### 保存对话</span></span>
<span class="line">/chat save <span class="token punctuation">[</span>chat_name<span class="token punctuation">]</span></span>
<span class="line"><span class="token comment">## 恢复</span></span>
<span class="line">/chat resume <span class="token punctuation">[</span>chat_name<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23)]))}const o=n(l,[["render",c],["__file","gemini_manual.html.vue"]]),p=JSON.parse('{"path":"/Backend/k8s/gemini_manual.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"默认配置文件","slug":"默认配置文件","link":"#默认配置文件","children":[]},{"level":2,"title":"新增GEMINI.md文件","slug":"新增gemini-md文件","link":"#新增gemini-md文件","children":[]},{"level":2,"title":"运行local shell command","slug":"运行local-shell-command","link":"#运行local-shell-command","children":[]},{"level":2,"title":"调用Save Memory工具","slug":"调用save-memory工具","link":"#调用save-memory工具","children":[]},{"level":2,"title":"指定文件","slug":"指定文件","link":"#指定文件","children":[]},{"level":2,"title":"使用--sandbox","slug":"使用-sandbox","link":"#使用-sandbox","children":[]},{"level":2,"title":"使用checkpointing","slug":"使用checkpointing","link":"#使用checkpointing","children":[]},{"level":2,"title":"对chat的保存与恢复","slug":"对chat的保存与恢复","link":"#对chat的保存与恢复","children":[]}],"git":{"updatedTime":1758172659000,"contributors":[{"name":"RuanCong","username":"RuanCong","email":"1308811723@qq.com","commits":3,"url":"https://github.com/RuanCong"}]},"filePathRelative":"Backend/k8s/gemini_manual.md"}');export{o as comp,p as data};
