import{_ as t,c as n,a as o,o as a}from"./app-Cmz4Q7j8.js";const i="/assets/image-20250815091851689-BttBua7w.png",s={};function l(r,e){return a(),n("div",null,e[0]||(e[0]=[o('<h2 id="kubernetes-components" tabindex="-1"><a class="header-anchor" href="#kubernetes-components"><span>Kubernetes Components</span></a></h2><p>The components of a Kubernetes cluster:</p><p><img src="'+i+'" alt="image-20250815091851689"></p><h2 id="官方文档笔记" tabindex="-1"><a class="header-anchor" href="#官方文档笔记"><span>官方文档笔记</span></a></h2><ul><li>Pods are the smallest deployable units of computing that you can create and manage in Kubernetes</li><li>You don&#39;t need to run multiple containers to provide replication (for resilience or capacity)</li><li>Restarting a container in a Pod should not be confused with restarting a Pod. A Pod is not a process, but an environment for running container(s). A Pod persists until it is deleted.</li><li>Modifying the pod template or switching to a new pod template has no direct effect on the Pods that already exist. <blockquote><p>只会根据新的更新的模板重新创建一个pod</p></blockquote></li><li>The name of a Pod must be a valid DNS subdomain value, but this can produce unexpected results for the Pod hostname. For best compatibility, the name should follow the more restrictive rules for a DNS label</li></ul><h2 id="未同步的" tabindex="-1"><a class="header-anchor" href="#未同步的"><span>未同步的</span></a></h2><ul><li><p>Pods that are part of a DaemonSet tolerate being run on an unschedulable Node. DaemonSets typically provide node-local services that should run on the Node even if it is being drained of workload applications.</p><blockquote><p>在 Kubernetes 中，这些“必须安装在每个节点上”的后台服务，就是通过 DaemonSet 来部署的。常见的例子有：日志收集器，节点监控器，网络插件，存储插件</p></blockquote></li><li><p>In case of a Node, it is implicitly assumed that an instance using the same name will have the same state (e.g. network settings, root disk contents) and attributes like node labels.</p><blockquote><p>这里的instance是指虚拟机或者物理机。 Kubernetes 认‘名’不认‘人’。它把节点名称当作身份证号。如果一个新人拿了旧人的身份证号来报到，系统会把他当成旧人，但这个新人的能力和背景（磁盘内容、硬件属性）是全新的。这种身份与实际能力的不匹配，正是很多诡异问题的根源。请务必确保在替换节点时，先‘注销’旧的身份信息（kubectl delete node），再让新人用自己的身份注册。</p></blockquote></li><li><p>Register the node with the given list of taints</p><blockquote><p>可以把 Taint (污点) 想象成节点（Node）上的一个“排斥标签”或者“谢绝入内”的牌子。 一旦一个节点被打上了某个 Taint，Kubernetes 的调度器（Scheduler）默认就不会把任何 Pod 调度到这个节点上。这就好像一个房间门口挂着“请勿打扰”的牌子，正常情况下，没有人会进去。</p></blockquote></li></ul>',7)]))}const u=t(s,[["render",l],["__file","k8s.html.vue"]]),d=JSON.parse('{"path":"/Backend/k8s/k8s.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Kubernetes Components","slug":"kubernetes-components","link":"#kubernetes-components","children":[]},{"level":2,"title":"官方文档笔记","slug":"官方文档笔记","link":"#官方文档笔记","children":[]},{"level":2,"title":"未同步的","slug":"未同步的","link":"#未同步的","children":[]}],"git":{"updatedTime":1756044172000,"contributors":[{"name":"RuanCong","username":"RuanCong","email":"1308811723@qq.com","commits":1,"url":"https://github.com/RuanCong"},{"name":"Leite-home","username":"Leite-home","email":"ruancong130@gmail.com","commits":1,"url":"https://github.com/Leite-home"}]},"filePathRelative":"Backend/k8s/k8s.md"}');export{u as comp,d as data};
