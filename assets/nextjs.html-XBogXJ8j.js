import{_ as t,c as n,a,o as s}from"./app-CBcjwgaz.js";const o="/assets/image-20250620171433724-DHnNi6UG.png",r="/assets/image-20250620171456302-BlmKEYws.png",d="/assets/image-20250620115540425-BMjxBaYh.png",p="/assets/image-20250620115619147-BbOPDQwk.png",c="/assets/image-20250620115715915-DP0YEkA2.png",l="/assets/image-20250620115803639-D5pnRa3K.png",i="/assets/image-20250620135923483-BB22d1fN.png",u="/assets/image-20250620140531898-COoqxcMF.png",g="/assets/image-20250620150130806-CYnT1pLv.png",h="/assets/image-20250623105910942-BmZMuNg3.png",f="/assets/image-20250623150452533-vYJ8FeKI.png",m={};function k(b,e){return s(),n("div",null,e[0]||(e[0]=[a('<h1 id="project-structure" tabindex="-1"><a class="header-anchor" href="#project-structure"><span>Project Structure</span></a></h1><h2 id="folder-and-file-conversions" tabindex="-1"><a class="header-anchor" href="#folder-and-file-conversions"><span>Folder and file conversions</span></a></h2><h3 id="top-level-folders" tabindex="-1"><a class="header-anchor" href="#top-level-folders"><span>Top-level folders</span></a></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/app" target="_blank" rel="noopener noreferrer"><code>app</code></a></td><td>App Router</td></tr><tr><td><a href="https://nextjs.org/docs/pages/building-your-application/routing" target="_blank" rel="noopener noreferrer"><code>pages</code></a></td><td>Pages Router</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/public-folder" target="_blank" rel="noopener noreferrer"><code>public</code></a></td><td>Static assets to be served</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/src-folder" target="_blank" rel="noopener noreferrer"><code>src</code></a></td><td>Optional application source folder</td></tr></tbody></table><h3 id="top-level-files" tabindex="-1"><a class="header-anchor" href="#top-level-files"><span>Top-level files</span></a></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><strong>Next.js</strong></td><td></td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/config/next-config-js" target="_blank" rel="noopener noreferrer"><code>next.config.js</code></a></td><td>Configuration file for Next.js</td></tr><tr><td><a href="https://nextjs.org/docs/app/getting-started/installation#manual-installation" target="_blank" rel="noopener noreferrer"><code>package.json</code></a></td><td>Project dependencies and scripts</td></tr><tr><td><a href="https://nextjs.org/docs/app/guides/instrumentation" target="_blank" rel="noopener noreferrer"><code>instrumentation.ts</code></a></td><td>OpenTelemetry and Instrumentation file</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/middleware" target="_blank" rel="noopener noreferrer"><code>middleware.ts</code></a></td><td>Next.js request middleware</td></tr><tr><td><a href="https://nextjs.org/docs/app/guides/environment-variables" target="_blank" rel="noopener noreferrer"><code>.env</code></a></td><td>Environment variables</td></tr><tr><td><a href="https://nextjs.org/docs/app/guides/environment-variables" target="_blank" rel="noopener noreferrer"><code>.env.local</code></a></td><td>Local environment variables</td></tr><tr><td><a href="https://nextjs.org/docs/app/guides/environment-variables" target="_blank" rel="noopener noreferrer"><code>.env.production</code></a></td><td>Production environment variables</td></tr><tr><td><a href="https://nextjs.org/docs/app/guides/environment-variables" target="_blank" rel="noopener noreferrer"><code>.env.development</code></a></td><td>Development environment variables</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/config/eslint" target="_blank" rel="noopener noreferrer"><code>.eslintrc.json</code></a></td><td>Configuration file for ESLint</td></tr><tr><td><code>.gitignore</code></td><td>Git files and folders to ignore</td></tr><tr><td><code>next-env.d.ts</code></td><td>TypeScript declaration file for Next.js</td></tr><tr><td><code>tsconfig.json</code></td><td>Configuration file for TypeScript</td></tr><tr><td><code>jsconfig.json</code></td><td>Configuration file for JavaScript</td></tr></tbody></table><h3 id="routing-files" tabindex="-1"><a class="header-anchor" href="#routing-files"><span>Routing Files</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/layout" target="_blank" rel="noopener noreferrer"><code>layout</code></a></td><td><code>.js</code> <code>.jsx</code> <code>.tsx</code></td><td>Layout</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/page" target="_blank" rel="noopener noreferrer"><code>page</code></a></td><td><code>.js</code> <code>.jsx</code> <code>.tsx</code></td><td>Page</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/loading" target="_blank" rel="noopener noreferrer"><code>loading</code></a></td><td><code>.js</code> <code>.jsx</code> <code>.tsx</code></td><td>Loading UI</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/not-found" target="_blank" rel="noopener noreferrer"><code>not-found</code></a></td><td><code>.js</code> <code>.jsx</code> <code>.tsx</code></td><td>Not found UI</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/error" target="_blank" rel="noopener noreferrer"><code>error</code></a></td><td><code>.js</code> <code>.jsx</code> <code>.tsx</code></td><td>Error UI</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/error#global-error" target="_blank" rel="noopener noreferrer"><code>global-error</code></a></td><td><code>.js</code> <code>.jsx</code> <code>.tsx</code></td><td>Global error UI</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/route" target="_blank" rel="noopener noreferrer"><code>route</code></a></td><td><code>.js</code> <code>.ts</code></td><td>API endpoint</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/template" target="_blank" rel="noopener noreferrer"><code>template</code></a></td><td><code>.js</code> <code>.jsx</code> <code>.tsx</code></td><td>Re-rendered layout</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/default" target="_blank" rel="noopener noreferrer"><code>default</code></a></td><td><code>.js</code> <code>.jsx</code> <code>.tsx</code></td><td>Parallel route fallback page</td></tr></tbody></table><h3 id="nested-routes" tabindex="-1"><a class="header-anchor" href="#nested-routes"><span>Nested routes</span></a></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>folder</code></td><td>Route segment</td></tr><tr><td><code>folder/folder</code></td><td>Nested route segment</td></tr></tbody></table><h3 id="dynamic-routes" tabindex="-1"><a class="header-anchor" href="#dynamic-routes"><span>Dynamic routes</span></a></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/dynamic-routes#convention" target="_blank" rel="noopener noreferrer"><code>[folder]</code></a></td><td>Dynamic route segment</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/dynamic-routes#catch-all-segments" target="_blank" rel="noopener noreferrer"><code>[...folder]</code></a></td><td>Catch-all route segment</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/dynamic-routes#optional-catch-all-segments" target="_blank" rel="noopener noreferrer"><code>[[...folder]]</code></a></td><td>Optional catch-all route segment</td></tr></tbody></table><h3 id="route-groups-and-private-folders" tabindex="-1"><a class="header-anchor" href="#route-groups-and-private-folders"><span>Route Groups and private folders</span></a></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/route-groups#convention" target="_blank" rel="noopener noreferrer"><code>(folder)</code></a></td><td>Group routes without affecting routing</td></tr><tr><td><a href="https://nextjs.org/docs/app/getting-started/project-structure#private-folders" target="_blank" rel="noopener noreferrer"><code>_folder</code></a></td><td>Opt folder and all child segments out of routing</td></tr></tbody></table><p>Route Groups can be nested.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><ul><li><p><strong>Organize routes without affecting the URL path</strong></p><p><img src="'+o+'" alt="image-20250620171433724"></p><p>Even though routes inside <code>(marketing)</code> and <code>(shop)</code> share the same URL hierarchy, you can create a different layout for each group by adding a <code>layout.js</code> file inside their folders.</p><p><img src="'+r+'" alt="image-20250620171456302"></p></li></ul><h3 id="parallel-and-intercepted-routes" tabindex="-1"><a class="header-anchor" href="#parallel-and-intercepted-routes"><span>Parallel and Intercepted Routes</span></a></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/parallel-routes#slots" target="_blank" rel="noopener noreferrer"><code>@folder</code></a></td><td>Named slot</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/intercepting-routes#convention" target="_blank" rel="noopener noreferrer"><code>(.)folder</code></a></td><td>Intercept same level</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/intercepting-routes#convention" target="_blank" rel="noopener noreferrer"><code>(..)folder</code></a></td><td>Intercept one level above</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/intercepting-routes#convention" target="_blank" rel="noopener noreferrer"><code>(..)(..)folder</code></a></td><td>Intercept two levels above</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/intercepting-routes#convention" target="_blank" rel="noopener noreferrer"><code>(...)folder</code></a></td><td>Intercept from root</td></tr></tbody></table><h3 id="metadata-file-conventions" tabindex="-1"><a class="header-anchor" href="#metadata-file-conventions"><span>Metadata file conventions</span></a></h3><h4 id="app-icons" tabindex="-1"><a class="header-anchor" href="#app-icons"><span>App icons</span></a></h4><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/app-icons#favicon" target="_blank" rel="noopener noreferrer"><code>favicon</code></a></td><td><code>.ico</code></td><td>Favicon file</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/app-icons#icon" target="_blank" rel="noopener noreferrer"><code>icon</code></a></td><td><code>.ico</code> <code>.jpg</code> <code>.jpeg</code> <code>.png</code> <code>.svg</code></td><td>App Icon file</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/app-icons#generate-icons-using-code-js-ts-tsx" target="_blank" rel="noopener noreferrer"><code>icon</code></a></td><td><code>.js</code> <code>.ts</code> <code>.tsx</code></td><td>Generated App Icon</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/app-icons#apple-icon" target="_blank" rel="noopener noreferrer"><code>apple-icon</code></a></td><td><code>.jpg</code> <code>.jpeg</code>, <code>.png</code></td><td>Apple App Icon file</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/app-icons#generate-icons-using-code-js-ts-tsx" target="_blank" rel="noopener noreferrer"><code>apple-icon</code></a></td><td><code>.js</code> <code>.ts</code> <code>.tsx</code></td><td>Generated Apple App Icon</td></tr></tbody></table><h4 id="seo" tabindex="-1"><a class="header-anchor" href="#seo"><span>SEO</span></a></h4><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/sitemap#sitemap-files-xml" target="_blank" rel="noopener noreferrer"><code>sitemap</code></a></td><td><code>.xml</code></td><td>Sitemap file</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/sitemap#generating-a-sitemap-using-code-js-ts" target="_blank" rel="noopener noreferrer"><code>sitemap</code></a></td><td><code>.js</code> <code>.ts</code></td><td>Generated Sitemap</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/robots#static-robotstxt" target="_blank" rel="noopener noreferrer"><code>robots</code></a></td><td><code>.txt</code></td><td>Robots file</td></tr><tr><td><a href="https://nextjs.org/docs/app/api-reference/file-conventions/metadata/robots#generate-a-robots-file" target="_blank" rel="noopener noreferrer"><code>robots</code></a></td><td><code>.js</code> <code>.ts</code></td><td>Generated Robots file</td></tr></tbody></table><h3 id="organizing-your-project" tabindex="-1"><a class="header-anchor" href="#organizing-your-project"><span>Organizing your project</span></a></h3><h4 id="component-hierarchy" tabindex="-1"><a class="header-anchor" href="#component-hierarchy"><span>Component hierarchy</span></a></h4><p>The components defined in special files are rendered in a specific hierarchy:</p><ul><li><code>layout.js</code></li><li><code>template.js</code></li><li><code>error.js</code> (React error boundary)</li><li><code>loading.js</code> (React suspense boundary)</li><li><code>not-found.js</code> (React error boundary)</li><li><code>page.js</code> or nested <code>layout.js</code></li></ul><p><img src="'+d+'" alt="image-20250620115540425"></p><p>The components of a route segment will be nested <strong>inside</strong> the components of its parent segment.</p><p><img src="'+p+'" alt="image-20250620115619147"></p><h4 id="colocation" tabindex="-1"><a class="header-anchor" href="#colocation"><span>Colocation</span></a></h4><p>A route is <strong>not publicly accessible</strong> until a <code>page.js</code> or <code>route.js</code> file is added to a route segment.</p><p><img src="'+c+'" alt="image-20250620115715915"></p><p>And, even when a route is made publicly accessible, only the <strong>content returned</strong> by <code>page.js</code> or <code>route.js</code> is sent to the client.</p><p><img src="'+l+'" alt="image-20250620115803639"></p><h4 id="private-folders" tabindex="-1"><a class="header-anchor" href="#private-folders"><span>Private folders</span></a></h4><p>Private folders can be created by prefixing a folder with an underscore: <code>_folderName</code></p><p>his indicates the folder is a private implementation detail and should not be considered by the routing system, thereby <strong>opting the folder and all its subfolders</strong> out of routing.</p><p><img src="'+i+'" alt="image-20250620135923483"></p><h4 id="route-groups" tabindex="-1"><a class="header-anchor" href="#route-groups"><span>Route groups</span></a></h4><p>Route groups can be created by wrapping a folder in parenthesis: <code>(folderName)</code></p><p>This indicates the folder is for organizational purposes and should <strong>not be included</strong> in the route&#39;s URL path.</p><p><img src="'+u+'" alt="image-20250620140531898"></p><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><ul><li><p><strong>Creating multiple root layouts</strong></p><p>To create multiple <a href="https://nextjs.org/docs/app/api-reference/file-conventions/layout#root-layout" target="_blank" rel="noopener noreferrer">root layouts</a>, remove the top-level <code>layout.js</code> file, and add a <code>layout.js</code> file inside each route group. This is useful for partitioning an application into sections that have a completely different UI or experience. The <code>&lt;html&gt;</code> and <code>&lt;body&gt;</code> tags need to be added to each root layout.</p><p><img src="'+g+'" alt="image-20250620150130806"></p><p>In the example above, both <code>(marketing)</code> and <code>(shop)</code> have their own root layout.</p></li></ul><h1 id="layouts-and-pages" tabindex="-1"><a class="header-anchor" href="#layouts-and-pages"><span>Layouts and Pages</span></a></h1><h2 id="creating-a-page" tabindex="-1"><a class="header-anchor" href="#creating-a-page"><span>Creating a page</span></a></h2><p>A <strong>page</strong> is UI that is rendered on a specific route.</p><p><img src="'+h+`" alt="image-20250623105910942"></p><h2 id="creating-a-layout" tabindex="-1"><a class="header-anchor" href="#creating-a-layout"><span>Creating a layout</span></a></h2><p>A layout is UI that is <strong>shared</strong> between multiple pages.</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token comment">// app/layout.tsx</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">DashboardLayout</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  children<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span><span class="token comment">/* Layout UI */</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span><span class="token comment">/* Place children where you want to render a page or nested layout */</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The layout above is called a <a href="https://nextjs.org/docs/app/api-reference/file-conventions/layout#root-layout" target="_blank" rel="noopener noreferrer">root layout</a> because it&#39;s defined at the root of the <code>app</code> directory. The root layout is <strong>required</strong> and must contain <code>html</code> and <code>body</code> tags.</p><h2 id="creating-a-nested-route" tabindex="-1"><a class="header-anchor" href="#creating-a-nested-route"><span>Creating a nested route</span></a></h2><p>A nested route is a route composed of multiple URL segments. For example, the <code>/blog/[slug]</code> route is composed of three segments:</p><ul><li><code>/</code> (Root Segment)</li><li><code>blog</code> (Segment)</li><li><code>[slug]</code> (Leaf Segment)</li></ul><p>In Next.js:</p><ul><li><strong>Folders</strong> are used to define the route segments that map to URL segments.</li><li><strong>Files</strong> (like <code>page</code> and <code>layout</code>) are used to create UI that is shown for a segment.</li></ul><h2 id="nesting-layouts" tabindex="-1"><a class="header-anchor" href="#nesting-layouts"><span>Nesting layouts</span></a></h2><p>For example, to create a layout for the <code>/blog</code> route, add a new <code>layout</code> file inside the <code>blog</code> folder.</p><p><img src="`+f+`" alt="image-20250623150452533"></p><h2 id="creating-a-dynamic-segment" tabindex="-1"><a class="header-anchor" href="#creating-a-dynamic-segment"><span>Creating a dynamic segment</span></a></h2><p>To create a dynamic segment, wrap the segment (folder) name in square brackets: <code>[segmentName]</code>. For example, in the <code>app/blog/[slug]/page.tsx</code> route, the <code>[slug]</code> is the dynamic segment.</p><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">BlogPostPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  params<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  params<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> slug<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> slug <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> params</span>
<span class="line">  <span class="token keyword">const</span> post <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getPost</span><span class="token punctuation">(</span>slug<span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>content<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Dynamic Segments are passed as the <code>params</code> prop to <a href="https://nextjs.org/docs/app/api-reference/file-conventions/layout" target="_blank" rel="noopener noreferrer"><code>layout</code></a>, <a href="https://nextjs.org/docs/app/api-reference/file-conventions/page" target="_blank" rel="noopener noreferrer"><code>page</code></a>, <a href="https://nextjs.org/docs/app/api-reference/file-conventions/route" target="_blank" rel="noopener noreferrer"><code>route</code></a>, and <a href="https://nextjs.org/docs/app/api-reference/functions/generate-metadata#generatemetadata-function" target="_blank" rel="noopener noreferrer"><code>generateMetadata</code></a> functions.</p><blockquote><p>the <code>params</code> prop is a promise. In version 14 and earlier, <code>params</code> was a synchronous prop.</p></blockquote>`,67)]))}const x=t(m,[["render",k],["__file","nextjs.html.vue"]]),y=JSON.parse('{"path":"/Frontend/nextjs/nextjs.html","title":"Project Structure","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Folder and file conversions","slug":"folder-and-file-conversions","link":"#folder-and-file-conversions","children":[{"level":3,"title":"Top-level folders","slug":"top-level-folders","link":"#top-level-folders","children":[]},{"level":3,"title":"Top-level files","slug":"top-level-files","link":"#top-level-files","children":[]},{"level":3,"title":"Routing Files","slug":"routing-files","link":"#routing-files","children":[]},{"level":3,"title":"Nested routes","slug":"nested-routes","link":"#nested-routes","children":[]},{"level":3,"title":"Dynamic routes","slug":"dynamic-routes","link":"#dynamic-routes","children":[]},{"level":3,"title":"Route Groups and private folders","slug":"route-groups-and-private-folders","link":"#route-groups-and-private-folders","children":[]},{"level":3,"title":"Parallel and Intercepted Routes","slug":"parallel-and-intercepted-routes","link":"#parallel-and-intercepted-routes","children":[]},{"level":3,"title":"Metadata file conventions","slug":"metadata-file-conventions","link":"#metadata-file-conventions","children":[]},{"level":3,"title":"Organizing your project","slug":"organizing-your-project","link":"#organizing-your-project","children":[]}]},{"level":2,"title":"Creating a page","slug":"creating-a-page","link":"#creating-a-page","children":[]},{"level":2,"title":"Creating a layout","slug":"creating-a-layout","link":"#creating-a-layout","children":[]},{"level":2,"title":"Creating a nested route","slug":"creating-a-nested-route","link":"#creating-a-nested-route","children":[]},{"level":2,"title":"Nesting layouts","slug":"nesting-layouts","link":"#nesting-layouts","children":[]},{"level":2,"title":"Creating a dynamic segment","slug":"creating-a-dynamic-segment","link":"#creating-a-dynamic-segment","children":[]}],"git":{"updatedTime":1750672959000,"contributors":[{"name":"RuanCong","username":"RuanCong","email":"1308811723@qq.com","commits":4,"url":"https://github.com/RuanCong"}]},"filePathRelative":"Frontend/nextjs/nextjs.md"}');export{x as comp,y as data};
